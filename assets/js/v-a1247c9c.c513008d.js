"use strict";(self.webpackChunkvuepress_starter=self.webpackChunkvuepress_starter||[]).push([[7789],{7810:(e,d,a)=>{a.r(d),a.d(d,{data:()=>c});const c={key:"v-a1247c9c",path:"/note/js/8.Increase-and-decrease.html",title:"9. 自增和自减",lang:"zh-CN",frontmatter:{title:"9. 自增和自减",date:"2017-06-13T00:00:00.000Z",tags:["JS"]},excerpt:"",headers:[{level:2,title:"基本功能",slug:"基本功能",children:[]},{level:2,title:"细节",slug:"细节",children:[{level:3,title:"自增自减表达式",slug:"自增自减表达式",children:[]},{level:3,title:"优先级",slug:"优先级",children:[]}]}],filePathRelative:"note/js/8.Increase-and-decrease.md",git:{updatedTime:1628577068e3,contributors:[{name:"n",email:"n@nannandeMacBook-Air.local",commits:1}]}}},4124:(e,d,a)=>{a.r(d),a.d(d,{default:()=>l});const c=(0,a(6252).uE)('<h1 id="自增和自减" tabindex="-1"><a class="header-anchor" href="#自增和自减" aria-hidden="true">#</a> 自增和自减</h1><h2 id="基本功能" tabindex="-1"><a class="header-anchor" href="#基本功能" aria-hidden="true">#</a> 基本功能</h2><p><code>++</code> : 将某个变量的值自增 1</p><p><code>--</code> : 将某个变量的值自减 1</p><h2 id="细节" tabindex="-1"><a class="header-anchor" href="#细节" aria-hidden="true">#</a> 细节</h2><h3 id="自增自减表达式" tabindex="-1"><a class="header-anchor" href="#自增自减表达式" aria-hidden="true">#</a> 自增自减表达式</h3><p><code>x++</code>：将变量 x 自增 1，得到的表达式的值是自增之前的值。 <code>++x</code>：将变量 x 自增 1，得到的表达式的值是自增之后的值。</p><p><code>x--</code>：将变量 x 自减 1，得到的表达式的值是自减之前的值。 <code>--x</code>：将变量 x 自减 1，得到的表达式的值是自减之后的值。</p><h3 id="优先级" tabindex="-1"><a class="header-anchor" href="#优先级" aria-hidden="true">#</a> 优先级</h3><p>从高到低依次是：</p><ol><li><p><code>++</code> <code>--</code></p></li><li><p><code>*</code> <code>/</code> <code>%</code></p></li><li><p><code>+</code> <code>-</code></p></li></ol><p>优先级运算的细节：</p><ol><li>从左到右依次查看</li><li>如果遇到操作数，将数据的值直接取出</li><li>如果遇到相邻的两个运算符，并且左边的运算符优先级大于右边的运算符，则直接运行左边的运算符。</li></ol>',13),l={render:function(e,d){return c}}}}]);