"use strict";(self.webpackChunkvuepress_starter=self.webpackChunkvuepress_starter||[]).push([[8171],{2242:(e,t,r)=>{r.r(t),r.d(t,{data:()=>n});const n={key:"v-be81253c",path:"/note/js/5.Reference-type.html",title:"6. 引用类型",lang:"zh-CN",frontmatter:{title:"6. 引用类型",date:"2017-06-12T00:00:00.000Z",tags:["JS"]},excerpt:"",headers:[],filePathRelative:"note/js/5.Reference-type.md",git:{updatedTime:1628577068e3,contributors:[{name:"n",email:"n@nannandeMacBook-Air.local",commits:1}]}}},2266:(e,t,r)=>{r.r(t),r.d(t,{default:()=>a});const n=(0,r(6252).uE)('<h1 id="引用类型" tabindex="-1"><a class="header-anchor" href="#引用类型" aria-hidden="true">#</a> 引用类型</h1><p>原始类型 引用类型（对象、函数）</p><p><strong>原始类型的变量，存放的具体的值</strong></p><p><strong>引用类型的变量，存放的是内存地址</strong></p><p><strong>凡是出现对象字面量的位置，都一定在内存中出现一个新的对象</strong></p><blockquote><p>扩展知识：JS中的垃圾回收</p><p>JS引擎中的垃圾回收器，会定期的发现内存中无法访问到的对象，该对象称之为垃圾，JS引擎中的垃圾回收器会在合适的时间将其占用的内存释放</p></blockquote>',6),a={render:function(e,t){return n}}}}]);