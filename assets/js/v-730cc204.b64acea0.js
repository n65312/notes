"use strict";(self.webpackChunkvuepress_starter=self.webpackChunkvuepress_starter||[]).push([[2987],{2297:(e,l,a)=>{a.r(l),a.d(l,{data:()=>t});const t={key:"v-730cc204",path:"/note/js/35.DOM3.html",title:"36. DOM 元素样式",lang:"zh-CN",frontmatter:{title:"36. DOM 元素样式",date:"2017-06-22T00:00:00.000Z",tags:["JS"]},excerpt:"",headers:[{level:2,title:"控制DOM元素的类样式",slug:"控制dom元素的类样式",children:[]},{level:2,title:"获取样式",slug:"获取样式",children:[]},{level:2,title:"设置样式",slug:"设置样式",children:[]}],filePathRelative:"note/js/35.DOM3.md",git:{updatedTime:1628577068e3,contributors:[{name:"n",email:"n@nannandeMacBook-Air.local",commits:1}]}}},3704:(e,l,a)=>{a.r(l),a.d(l,{default:()=>i});const t=(0,a(6252).uE)('<h1 id="dom-元素样式" tabindex="-1"><a class="header-anchor" href="#dom-元素样式" aria-hidden="true">#</a> DOM 元素样式</h1><h2 id="控制dom元素的类样式" tabindex="-1"><a class="header-anchor" href="#控制dom元素的类样式" aria-hidden="true">#</a> 控制DOM元素的类样式</h2><ul><li><code>className</code>：获取或设置元素的类名</li><li><code>classList</code>：DOM4的新属性，是一个用于控制元素类名的对象 <ul><li>add：用于添加一个类名</li><li>remove：用于移除一个类名</li><li>contains：用于判断一个类名是否存在</li><li>toggle：用于添加/移除一个类名</li></ul></li></ul><h2 id="获取样式" tabindex="-1"><a class="header-anchor" href="#获取样式" aria-hidden="true">#</a> 获取样式</h2><p><strong>CSS的短横线命名，需要转为小驼峰命名</strong></p><ul><li><code>DOM.style</code>：得到<strong>行内样式</strong>对象</li><li><code>window.getComputedStyle(DOM元素)</code>：得到某个元素最终计算的样式 <ul><li>可以有第二个参数，用于得到某个元素的某个伪元素样式</li></ul></li></ul><h2 id="设置样式" tabindex="-1"><a class="header-anchor" href="#设置样式" aria-hidden="true">#</a> 设置样式</h2><ul><li><p><code>DOM.style.样式名 = 值</code></p><p>设置的是行内样式。</p></li></ul>',8),i={render:function(e,l){return t}}}}]);