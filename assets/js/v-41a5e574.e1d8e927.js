"use strict";(self.webpackChunkvuepress_starter=self.webpackChunkvuepress_starter||[]).push([[5237],{7342:(a,t,e)=>{e.r(t),e.d(t,{data:()=>p});const p={key:"v-41a5e574",path:"/note/css/8.Regular-flow.html",title:"9. 常规流",lang:"zh-CN",frontmatter:{title:"9. 常规流",date:"2017-06-09T00:00:00.000Z",tags:["CSS"]},excerpt:"",headers:[{level:2,title:"常规流布局",slug:"常规流布局",children:[]}],filePathRelative:"note/css/8.Regular-flow.md",git:{updatedTime:1628577068e3,contributors:[{name:"n",email:"n@nannandeMacBook-Air.local",commits:1}]}}},9125:(a,t,e)=>{e.r(t),e.d(t,{default:()=>i});const p=(0,e(6252).uE)('<h1 id="常规流" tabindex="-1"><a class="header-anchor" href="#常规流" aria-hidden="true">#</a> 常规流</h1><p>盒模型：规定单个盒子的规则</p><p>视觉格式化模型（布局规则）：页面中的多个盒子排列规则</p><p>视觉格式化模型，大体上将页面中盒子的排列分为三种方式：</p><ol><li>常规流</li><li>浮动</li><li>定位</li></ol><h2 id="常规流布局" tabindex="-1"><a class="header-anchor" href="#常规流布局" aria-hidden="true">#</a> 常规流布局</h2><p>常规流、文档流、普通文档流、常规文档流</p><p>所有元素，默认情况下，都属于常规流布局</p><p>总体规则：块盒独占一行，行盒水平依次排列</p><p>包含块（containing block）：每个盒子都有它的包含块，包含块决定了盒子的排列区域。</p><p>绝大部分情况下：盒子的包含块，为其父元素的内容盒</p><p><strong>块盒</strong></p><ol><li>每个块盒的总宽度，必须刚好等于包含块的宽度</li></ol><p>宽度的默认值是auto</p><p>margin的取值也可以是auto，默认值0</p><p>auto：将剩余空间吸收掉</p><p>width吸收能力强于margin</p><p>若宽度、边框、内边距、外边距计算后，仍然有剩余空间，该剩余空间被margin-right全部吸收</p><p>在常规流中，块盒在其包含快中居中，可以定宽、然后左右margin设置为auto。</p><ol start="2"><li>每个块盒垂直方向上的auto值</li></ol><p>height:auto， 适应内容的高度</p><p>margin:auto， 表示0</p><ol start="3"><li>百分比取值</li></ol><p>padding、宽、margin可以取值为百分比</p><p>以上的所有百分比相对于包含块的宽度。</p><p>高度的百分比：</p><p>1）. 包含块的高度是否取决于子元素的高度，设置百分比无效 2）. 包含块的高度不取决于子元素的高度，百分比相对于父元素高度</p><ol start="4"><li>上下外边距的合并</li></ol><p>两个常规流块盒，上下外边距相邻，会进行合并。</p><p>两个外边距取最大值。</p>',30),i={render:function(a,t){return p}}}}]);