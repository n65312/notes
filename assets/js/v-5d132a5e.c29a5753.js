"use strict";(self.webpackChunkvuepress_starter=self.webpackChunkvuepress_starter||[]).push([[8873],{6975:(e,a,t)=>{t.r(a),t.d(a,{data:()=>r});const r={key:"v-5d132a5e",path:"/note/js/36.DOM4.html",title:"37. DOM事件",lang:"zh-CN",frontmatter:{title:"37. DOM事件",date:"2017-06-22T00:00:00.000Z",tags:["JS"]},excerpt:"",headers:[{level:2,title:"术语",slug:"术语",children:[]},{level:2,title:"事件流",slug:"事件流",children:[]}],filePathRelative:"note/js/36.DOM4.md",git:{updatedTime:1628577068e3,contributors:[{name:"n",email:"n@nannandeMacBook-Air.local",commits:1}]}}},4609:(e,a,t)=>{t.r(a),t.d(a,{default:()=>i});const r=(0,t(6252).uE)('<h1 id="dom事件" tabindex="-1"><a class="header-anchor" href="#dom事件" aria-hidden="true">#</a> DOM事件</h1><h2 id="术语" tabindex="-1"><a class="header-anchor" href="#术语" aria-hidden="true">#</a> 术语</h2><ul><li><p>事件：发生一件事</p></li><li><p>事件类型：发生什么事情；点击、鼠标按下、鼠标抬起、鼠标移入、鼠标移出、键盘按下、键盘抬起……</p></li><li><p>事件处理程序：一个函数，当某件事情发生时运行。</p></li><li><p>事件注册：将一个事件处理程序，挂载到某个事件上。</p></li></ul><h2 id="事件流" tabindex="-1"><a class="header-anchor" href="#事件流" aria-hidden="true">#</a> 事件流</h2><p>事件流：当某个事件发生的时候，哪些元素会监听到该事件的发生，这些元素发生该事件的顺序。</p><p><strong>当一个元素发生了某个事件时，那么该元素的所有祖先元素都发生了该事件。</strong></p><p>事件冒泡：先触发最里层的元素，然后再依次触发外层元素 事件捕获：先触发最外层的元素，然后再依次触发里面元素</p><p>目前，标准规定，默认情况下，事件是冒泡的方式触发。</p><p>事件源、事件目标：事件目标阶段的元素</p>',9),i={render:function(e,a){return r}}}}]);