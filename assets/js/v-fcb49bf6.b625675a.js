"use strict";(self.webpackChunkvuepress_starter=self.webpackChunkvuepress_starter||[]).push([[3323],{842:(e,l,t)=>{t.r(l),t.d(l,{data:()=>a});const a={key:"v-fcb49bf6",path:"/note/js/2.Data-types.html",title:"3. 数据和数据类型",lang:"zh-CN",frontmatter:{title:"3. 数据和数据类型",date:"2017-06-12T00:00:00.000Z",tags:["JS"]},excerpt:"",headers:[{level:2,title:"JS 中的数据类型",slug:"js-中的数据类型",children:[{level:3,title:"原始类型",slug:"原始类型",children:[]},{level:3,title:"引用类型",slug:"引用类型",children:[]},{level:3,title:"字面量",slug:"字面量",children:[]}]}],filePathRelative:"note/js/2.Data-types.md",git:{updatedTime:1628577068e3,contributors:[{name:"n",email:"n@nannandeMacBook-Air.local",commits:1}]}}},5899:(e,l,t)=>{t.r(l),t.d(l,{default:()=>i});const a=(0,t(6252).uE)('<h1 id="数据和数据类型" tabindex="-1"><a class="header-anchor" href="#数据和数据类型" aria-hidden="true">#</a> 数据和数据类型</h1><p>数据：有用的信息</p><p>数据类型：数据的分类</p><p>本节课学习的是：不同类型的数据的字面量表示法</p><h2 id="js-中的数据类型" tabindex="-1"><a class="header-anchor" href="#js-中的数据类型" aria-hidden="true">#</a> JS 中的数据类型</h2><p>学习 JS 中，不同数据类型的书写方式</p><h3 id="原始类型" tabindex="-1"><a class="header-anchor" href="#原始类型" aria-hidden="true">#</a> 原始类型</h3><p>原始类型指不可再细分的类型</p><ol><li>数字类型 number</li></ol><p>直接书写即可</p><p>了解； 数字类型可以加上前缀，来表示不同的进制</p><pre><code>0 : 表示8进制\n0x : 表示16进制\n0b : 表示2进制\n</code></pre><ol start="2"><li>字符串类型 string</li></ol><ul><li>单引号： &#39; &#39;</li><li>双引号：&quot; &quot;</li><li>模板字符串：``</li></ul><p>在字符串中，如何表示一个特殊字符，可以使用转义符<code>\\</code></p><p>扩展：</p><p><code>\\n</code>: 表示换行 &gt;</p><p><code>\\t</code>:表示制表符</p><ol start="3"><li>布尔类型 boolean</li></ol><ul><li>true，表示真</li><li>false，表示假</li></ul><ol start="4"><li>undefined 类型</li></ol><p>表示为定义，不存在。 只有一种书写方式：undefined</p><ol start="5"><li>null 类型</li></ol><p>表示空，不存在。 只有一种书写方式：null</p><p>区分数字和字符串：如果按照数字的方式阅读，则使用数字类型；否则使用字符串类型。</p><h3 id="引用类型" tabindex="-1"><a class="header-anchor" href="#引用类型" aria-hidden="true">#</a> 引用类型</h3><p>引用类型有两种：</p><ol><li>对象 Object</li></ol><p>可以认为，对象是由多个基本类型组合而成。</p><p>书写对象的格式见 text2.html</p><p>属性：表示对象的成员</p><ol start="2"><li>函数(后续章节专门讲)</li></ol><p>得到数据的类型</p><p>在数据前加 typeof</p><p>js 的特征：typeof null，得到的是 Object</p><h3 id="字面量" tabindex="-1"><a class="header-anchor" href="#字面量" aria-hidden="true">#</a> 字面量</h3><p>直接书写的具体的数据，叫做字面量</p>',37),i={render:function(e,l){return a}}}}]);