"use strict";(self.webpackChunkvuepress_starter=self.webpackChunkvuepress_starter||[]).push([[6114],{4877:(e,t,a)=>{a.r(t),a.d(t,{data:()=>d});const d={key:"v-e20194f6",path:"/note/js/37.Event-registration.html",title:"38. 事件注册",lang:"zh-CN",frontmatter:{title:"38. 事件注册",date:"2017-06-22T00:00:00.000Z",tags:["JS"]},excerpt:"",headers:[{level:2,title:"DOM0",slug:"dom0",children:[]},{level:2,title:"DOM2",slug:"dom2",children:[]}],filePathRelative:"note/js/37.Event-registration.md",git:{updatedTime:1628577068e3,contributors:[{name:"n",email:"n@nannandeMacBook-Air.local",commits:1}]}}},8354:(e,t,a)=>{a.r(t),a.d(t,{default:()=>n});const d=(0,a(6252).uE)('<h1 id="事件注册" tabindex="-1"><a class="header-anchor" href="#事件注册" aria-hidden="true">#</a> 事件注册</h1><p>事件绑定</p><h2 id="dom0" tabindex="-1"><a class="header-anchor" href="#dom0" aria-hidden="true">#</a> DOM0</h2><p>将事件名称前面加上on，作为DOM的属性名，给该属性赋值为一个函数，即为事件注册。</p><p>事件移除：重新给事件属性赋值，通常赋值为<code>null</code>或<code>undefined</code></p><h2 id="dom2" tabindex="-1"><a class="header-anchor" href="#dom2" aria-hidden="true">#</a> DOM2</h2><p><code>DOM对象.addEventListener</code>：注册事件</p><p>与DOM0的区别</p><ol><li>DOM2可以为某个元素的同一个事件，添加多个处理程序，按照注册的先后顺序运行</li><li>DOM2允许开发者控制事件处理的阶段，使用第三个参数，表示是否在捕获阶段触发 <ul><li>如果元素是目标元素（事件源），第三个参数无效</li></ul></li></ol><p>事件移除：<code>DOM对象.removeEventListener(事件名，处理函数)</code>；</p><p><strong>DOM2中如果要移除事件，不能使用匿名函数</strong></p><p><strong>细节</strong></p><ol><li>DOM2在IE8及以下不兼容，需要使用<code>attachEvent</code>，<code>detachEvent</code>添加和移除事件 2.添加和移除事件时，可以将第三个参数写为一个对象，进行相关配置</li></ol>',13),n={render:function(e,t){return d}}}}]);