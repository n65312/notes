"use strict";(self.webpackChunkvuepress_starter=self.webpackChunkvuepress_starter||[]).push([[9691],{5273:(e,a,l)=>{l.r(a),l.d(a,{data:()=>t});const t={key:"v-5329da17",path:"/note/css/19.data-URL.html",title:"20. 数据链接",lang:"zh-CN",frontmatter:{title:"20. 数据链接",date:"2017-06-11T00:00:00.000Z",tags:["CSS"]},excerpt:"",headers:[{level:2,title:"如何书写",slug:"如何书写",children:[]},{level:2,title:"意义",slug:"意义",children:[]},{level:2,title:"base64",slug:"base64",children:[]}],filePathRelative:"note/css/19.data-URL.md",git:{updatedTime:1628577068e3,contributors:[{name:"n",email:"n@nannandeMacBook-Air.local",commits:1}]}}},6488:(e,a,l)=>{l.r(a),l.d(a,{default:()=>i});const t=(0,l(6252).uE)('<h1 id="数据链接" tabindex="-1"><a class="header-anchor" href="#数据链接" aria-hidden="true">#</a> 数据链接</h1><p>data url</p><h2 id="如何书写" tabindex="-1"><a class="header-anchor" href="#如何书写" aria-hidden="true">#</a> 如何书写</h2><p>数据链接：将目标文件的数据直接书写到路径位置</p><p>语法：data:MIME,数据</p><h2 id="意义" tabindex="-1"><a class="header-anchor" href="#意义" aria-hidden="true">#</a> 意义</h2><p>优点：</p><ol><li>减少了浏览器中的请求</li></ol><p>请求</p><p>响应</p><p>减少了请求中浪费的时间</p><ol start="2"><li>有利于动态生成数据</li></ol><p>缺点：</p><ol><li>增加了资源的体积</li></ol><p>导致了传输内容增加，从而增加了单个资源的传输时间</p><ol start="2"><li>不利于浏览器的缓存</li></ol><p>浏览器通常会缓存图片文件、css文件、js文件。</p><ol start="3"><li>会增加原资源的体积到原来的4/3</li></ol><p>应用场景：</p><ol><li><p>但请求单个图片体积较小，并且该图片因为各种原因，不适合制作雪碧图，可以使用数据链接。</p></li><li><p>图片由其他代码动态生成，并且图片较小，可以使用数据链接。</p></li></ol><h2 id="base64" tabindex="-1"><a class="header-anchor" href="#base64" aria-hidden="true">#</a> base64</h2><p>一种编码方式</p><p>通常用于将一些二进制数据，用一个可书写的字符串表示。</p>',23),i={render:function(e,a){return t}}}}]);