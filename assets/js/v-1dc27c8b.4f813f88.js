"use strict";(self.webpackChunkvuepress_starter=self.webpackChunkvuepress_starter||[]).push([[6256],{2330:(a,n,s)=>{s.r(n),s.d(n,{data:()=>t});const t={key:"v-1dc27c8b",path:"/note/vue/1.Directives.html",title:"1.指令",lang:"zh-CN",frontmatter:{title:"1.指令",date:"2021-10-28",tags:["vue"]},excerpt:"",headers:[{level:2,title:"v-text",slug:"v-text",children:[]},{level:2,title:"v-html",slug:"v-html",children:[]},{level:2,title:"v-show",slug:"v-show",children:[]},{level:2,title:"v-if",slug:"v-if",children:[]}],filePathRelative:"note/vue/1.Directives.md",git:{updatedTime:1661157804e3,contributors:[{name:"Nathan",email:"niu_nn@outlook.com",commits:1},{name:"n",email:"niu_nn@outlook.com",commits:1}]}}},7302:(a,n,s)=>{s.r(n),s.d(n,{default:()=>u});var t=s(6252),e=s(6612);const l=(0,t._)("h1",{id:"指令",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#指令","aria-hidden":"true"},"#"),(0,t.Uk)(" 指令")],-1),p=(0,t._)("h2",{id:"v-text",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#v-text","aria-hidden":"true"},"#"),(0,t.Uk)(" v-text")],-1),o=(0,t._)("li",null,"预期：string",-1),c=(0,t._)("li",null,"示例：",-1),i=(0,t.uE)('<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>msg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!-- 和下面的一样 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{msg}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="v-html" tabindex="-1"><a class="header-anchor" href="#v-html" aria-hidden="true">#</a> v-html</h2><ul><li>预期：string</li><li>详细：更新元素的 innerHTML。<strong>注意：内容按普通 HTML 插入 - 不会作为 Vue 模板进行编译。</strong> 如果试图使用 v-html 组合模板，可以重新考虑是否通过使用组件来替代。</li><li>示例：</li></ul><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>html<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="v-show" tabindex="-1"><a class="header-anchor" href="#v-show" aria-hidden="true">#</a> v-show</h2><ul><li>预期：any</li><li>详细：根据表达式之真假值，切换元素的 display CSS property。当条件变化时该指令触发过渡效果。</li><li>示例：</li></ul><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ok<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Hello!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="v-if" tabindex="-1"><a class="header-anchor" href="#v-if" aria-hidden="true">#</a> v-if</h2><ul><li><p>预期：any</p></li><li><p>用法：根据表达式的值的 truthiness 来有条件地渲染元素。在切换时元素及它的数据绑定 / 组件被销毁并重建。 如果元素是 <code>&lt;template&gt;</code>，将提出它的内容作为条件块。当条件变化时该指令触发过渡效果。</p></li><li><p>示例：</p></li></ul><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>awesome<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Vue is awesome!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">提示</p><p>当和 v-for 一起使用时，v-for 的优先级比 v-if 更高。</p></div>',11),u={render:function(a,n){return(0,t.wg)(),(0,t.iD)(t.HY,null,[l,p,(0,t._)("ul",null,[o,(0,t._)("li",null,"详细：更新元素的 textContent。如果要更新部分的 textContent，需要使用 "+(0,e.zw)(a.Mustache)+" 插值。",1),c]),i],64)}}}}]);