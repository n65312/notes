"use strict";(self.webpackChunkvuepress_starter=self.webpackChunkvuepress_starter||[]).push([[6170],{3605:(e,a,t)=>{t.r(a),t.d(a,{data:()=>i});const i={key:"v-4d1027ca",path:"/note/css/16.reference-line.html",title:"17. 参考线-深入理解字体",lang:"zh-CN",frontmatter:{title:"17. 参考线-深入理解字体",date:"2017-06-11T00:00:00.000Z",tags:["CSS"]},excerpt:"",headers:[{level:2,title:"文字",slug:"文字",children:[]},{level:2,title:"font-size",slug:"font-size",children:[]},{level:2,title:"行高",slug:"行高",children:[]},{level:2,title:"vertical-align",slug:"vertical-align",children:[]},{level:2,title:"可替换元素和行块盒的基线",slug:"可替换元素和行块盒的基线",children:[]}],filePathRelative:"note/css/16.reference-line.md",git:{updatedTime:1628577068e3,contributors:[{name:"n",email:"n@nannandeMacBook-Air.local",commits:1}]}}},8147:(e,a,t)=>{t.r(a),t.d(a,{default:()=>l});const i=(0,t(6252).uE)('<h1 id="参考线-深入理解字体" tabindex="-1"><a class="header-anchor" href="#参考线-深入理解字体" aria-hidden="true">#</a> 参考线-深入理解字体</h1><p>font-size、line-height、vertical-align、font-family</p><h2 id="文字" tabindex="-1"><a class="header-anchor" href="#文字" aria-hidden="true">#</a> 文字</h2><p>文字是通过一些文字制作软件制作的，比如fontforge</p><p>制作文字时，会有几根参考线，不同的文字类型，参考线不一样。同一种文字类型，参考线一致。</p><h2 id="font-size" tabindex="-1"><a class="header-anchor" href="#font-size" aria-hidden="true">#</a> font-size</h2><p>字体大小，设置的是文字的相对大小</p><p>文字的相对大小：1000、2048、1024</p><p>文字顶线到底线的距离，是文字的实际大小（content-area，内容区）</p><p>行盒的背景，覆盖content-area</p><h2 id="行高" tabindex="-1"><a class="header-anchor" href="#行高" aria-hidden="true">#</a> 行高</h2><p>顶线向上延申的空间，和底线向下延申的空间，两个空间相等，该空间叫做gap（空隙）</p><p>gap默认情况下，是字体设计者决定</p><p>top到botoom（看ppt图），叫做virtual-area（虚拟区）</p><p>行高，就是virtual-area</p><p>line-height:normal，默认值，使用文字默认的gap</p><blockquote><p>文字一定出现一行的最中间——错误 content-area一定出现在virtual-area的中间</p></blockquote><h2 id="vertical-align" tabindex="-1"><a class="header-anchor" href="#vertical-align" aria-hidden="true">#</a> vertical-align</h2><p>决定参考线：font-size、font-family、line-height</p><p>一个元素如果子元素出现行盒，该元素内部也会产生参考线</p><p>baseline：该元素的基线与父元素的基线对齐</p><p>super: 该元素的基线与父元素的上基线对齐</p><p>sub：该元素的基线与父元素的下基线对齐</p><p>text-top: 该元素的virtual-area的顶边，对齐父元素的text-top</p><p>text-bottom: 该元素的virtual-area的底边，对齐父元素的text-bottom</p><p>top：该元素的virtual-area的定边，对齐line-box的顶边</p><p>bottom：该元素的virtual-area的底边，对齐line-box的底边</p><p>middle: 该元素的中线（content-area的一半），与父元素的X字母高度一半的位置对齐</p><p>行盒组合起来，可以形成多行，每一行的区域叫做line-box，line-box的顶边是该行内所有行盒最高顶边，底边是该行行盒的最低底边。</p><p>实际，一个元素的实际占用高度（高度自动），高度的计算通过line-box计算。</p><p>行盒：inline-box 行框：line-box</p><p>数值：相对于基线的偏移量，向上为正数，向下为负数。</p><p>百分比：相对于基线的偏移量，百分比是相对于自身virtual-area的高度</p><p>line-box是承载文字内容的必要条件，以下情况不生成行框：</p><ol><li>某元素内部没有任何行盒</li><li>某元素字体大小为0</li></ol><h2 id="可替换元素和行块盒的基线" tabindex="-1"><a class="header-anchor" href="#可替换元素和行块盒的基线" aria-hidden="true">#</a> 可替换元素和行块盒的基线</h2><p>图片：基线位置位于图片的下外边距。</p><p>表单元素：基线位置在内容底边</p><p>行块盒：</p><ol><li>行块盒最后一行有line-box，用最后一行的基线作为整个行块盒的基线。</li><li>如果行块盒内部没有行盒，则使用下外边距作为基线</li></ol>',40),l={render:function(e,a){return i}}}}]);